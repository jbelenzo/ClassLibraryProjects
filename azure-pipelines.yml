trigger:
- master

pool:
  name: 'COMP367-Windows'  # Specify your self-hosted agent pool name

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  packageVersion: '1.0.$(Build.BuildId)'  # Auto-generate package version based on build ID
  feedName: 'FEED-LAB4-COMP357'  # Set the Azure Artifacts feed name
  packageName: 'Lab4ClassLibraryProjectsNuGetPackage'  # Set the NuGet package name

jobs:
- job: InitializeJob
  displayName: 'Initialize Job'
  steps:
    - script: echo "Initializing build process"
      displayName: 'Initialization step'

- job: CheckoutClassLibraryProjects
  displayName: 'Checkout ClassLibraryProjects'
  dependsOn: InitializeJob
  steps:
    - checkout: self
      displayName: 'Checkout source code'

- job: InstallDotNetSDK
  displayName: 'Install .NET SDK'
  dependsOn: CheckoutClassLibraryProjects
  steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'  # Install .NET 8 SDK
        installationPath: $(Agent.ToolsDirectory)/dotnet
      displayName: 'Install .NET 8 SDK'

- job: RestoreNuGetPackages
  displayName: 'Restore NuGet Packages'
  dependsOn: InstallDotNetSDK
  steps:
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        restoreArguments: '--no-cache --disable-parallel'
      displayName: 'Restore NuGet packages'

- job: BuildSolution
  displayName: 'Build Solution'
  dependsOn: RestoreNuGetPackages
  steps:
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:Platform=$(buildPlatform) /p:Configuration=$(buildConfiguration) /p:VisualStudioVersion=17.0'
      displayName: 'Build the Solution'

- job: RunTests
  displayName: 'Run Unit Tests'
  dependsOn: BuildSolution
  steps:
    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
      displayName: 'Run Tests'

- job: PackNuGetPackage
  displayName: 'Pack NuGet Package'
  dependsOn: RunTests
  steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'  # Adjust to target the correct project
        versioningScheme: 'off'
        version: '$(packageVersion)'  # Use custom versioning based on build ID
        outputDir: '$(Build.ArtifactStagingDirectory)/nuget'
      displayName: 'Pack NuGet Package'

- job: PushNuGetPackage
  displayName: 'Push NuGet Package to Azure Artifacts'
  dependsOn: PackNuGetPackage
  steps:
    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/nuget/*.nupkg'  # Path to the .nupkg file
        nuGetFeed: '$(feedName)'  # The name of your Azure Artifacts feed
      displayName: 'Push NuGet Package to Azure Artifacts'

- job: FinalizeJob
  displayName: 'Finalize Job'
  dependsOn: PushNuGetPackage
  steps:
    - script: echo "Finalizing build process"
      displayName: 'Finalizing job step'